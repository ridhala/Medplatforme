{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ridha\\\\Downloads\\\\cryptoverse-main\\\\src\\\\pages\\\\ReferenceCurrencies.tsx\",\n  _s = $RefreshSig$();\nimport { Avatar, Table, Typography } from 'antd';\nimport { useGetReferenceCurrenciesQuery } from '../redux/features/coins.feature';\nimport AsyncWrapper from '../layouts/AsyncWrapper';\nimport Helmet from '../components/Helmet';\nimport noImage from '../assets/images/icons/no-image.jpeg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  title: '#',\n  dataIndex: '0',\n  key: 'uuid',\n  render: (_, __, index) => index + 1\n}, {\n  title: 'Avatar',\n  dataIndex: 'iconUrl',\n  key: 'uuid',\n  align: 'center',\n  render: (_, record) => /*#__PURE__*/_jsxDEV(Avatar, {\n    src: record.iconUrl || noImage,\n    alt: record.name,\n    className: \"rounded-none\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 4\n  }, this)\n}, {\n  title: 'Name',\n  dataIndex: 'name',\n  key: 'uuid',\n  sorter: (a, b) => a.name.length - b.name.length\n}, {\n  title: 'Symbol',\n  dataIndex: 'symbol',\n  key: 'uuid',\n  align: 'center'\n}, {\n  title: 'Sign',\n  dataIndex: 'sign',\n  key: 'uuid',\n  align: 'center',\n  render: (_, record) => record.sign ? record.sign : '--'\n}];\nfunction ReferenceCurrencies() {\n  _s();\n  const {\n    isFetching: isFetchingCoin,\n    error: errorCoin,\n    data: coinData\n  } = useGetReferenceCurrenciesQuery({});\n  const {\n    isFetching: isFetchingFiat,\n    error: errorFiat,\n    data: fiatData\n  } = useGetReferenceCurrenciesQuery({\n    type: 'fiat'\n  });\n  return /*#__PURE__*/_jsxDEV(AsyncWrapper, {\n    loading: isFetchingCoin || isFetchingFiat,\n    error: errorCoin || errorFiat,\n    fulfilled: Boolean(coinData && fiatData),\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      title: \"Reference Currencies\",\n      description: \"Get a list of reference currencies, which can be used as reference for coins. The response includes all the essentials for this use-case, such as the symbol (e.g. USD) and - if available - the sign (e.g. $).\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 4\n    }, this), Boolean(coinData && fiatData) && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Typography.Title, {\n        level: 3,\n        className: \"mt-8 mb-5\",\n        children: \"Coin Reference Currencies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        scroll: {\n          x: 'max-content'\n        },\n        columns: columns,\n        dataSource: coinData.data.currencies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(Typography.Title, {\n        level: 3,\n        className: \"mt-20 mb-5\",\n        children: \"Fiat Reference Currencies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        scroll: {\n          x: 'max-content'\n        },\n        columns: columns,\n        dataSource: fiatData.data.currencies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 3\n  }, this);\n}\n_s(ReferenceCurrencies, \"0VBaODkuz/ifbAU2WTbSW8zaqUQ=\", false, function () {\n  return [useGetReferenceCurrenciesQuery, useGetReferenceCurrenciesQuery];\n});\n_c = ReferenceCurrencies;\nexport default ReferenceCurrencies;\nvar _c;\n$RefreshReg$(_c, \"ReferenceCurrencies\");","map":{"version":3,"names":["Avatar","Table","Typography","useGetReferenceCurrenciesQuery","AsyncWrapper","Helmet","noImage","jsxDEV","_jsxDEV","Fragment","_Fragment","columns","title","dataIndex","key","render","_","__","index","align","record","src","iconUrl","alt","name","className","fileName","_jsxFileName","lineNumber","columnNumber","sorter","a","b","length","sign","ReferenceCurrencies","_s","isFetching","isFetchingCoin","error","errorCoin","data","coinData","isFetchingFiat","errorFiat","fiatData","type","loading","fulfilled","Boolean","children","description","Title","level","scroll","x","dataSource","currencies","_c","$RefreshReg$"],"sources":["C:/Users/ridha/Downloads/cryptoverse-main/src/pages/ReferenceCurrencies.tsx"],"sourcesContent":["import { Avatar, Table, Typography } from 'antd';\nimport type { ColumnsType } from 'antd/es/table';\nimport { useGetReferenceCurrenciesQuery } from '../redux/features/coins.feature';\nimport AsyncWrapper from '../layouts/AsyncWrapper';\nimport Helmet from '../components/Helmet';\nimport noImage from '../assets/images/icons/no-image.jpeg';\n\nconst columns: ColumnsType<ReferenceCurrency> = [\n\t{\n\t\ttitle: '#',\n\t\tdataIndex: '0',\n\t\tkey: 'uuid',\n\t\trender: (_, __, index) => index + 1,\n\t},\n\t{\n\t\ttitle: 'Avatar',\n\t\tdataIndex: 'iconUrl',\n\t\tkey: 'uuid',\n\t\talign: 'center',\n\t\trender: (_, record) => (\n\t\t\t<Avatar\n\t\t\t\tsrc={record.iconUrl || noImage}\n\t\t\t\talt={record.name}\n\t\t\t\tclassName='rounded-none'\n\t\t\t/>\n\t\t),\n\t},\n\t{\n\t\ttitle: 'Name',\n\t\tdataIndex: 'name',\n\t\tkey: 'uuid',\n\t\tsorter: (a, b) => a.name.length - b.name.length,\n\t},\n\t{\n\t\ttitle: 'Symbol',\n\t\tdataIndex: 'symbol',\n\t\tkey: 'uuid',\n\t\talign: 'center',\n\t},\n\t{\n\t\ttitle: 'Sign',\n\t\tdataIndex: 'sign',\n\t\tkey: 'uuid',\n\t\talign: 'center',\n\t\trender: (_, record) => (record.sign ? record.sign : '--'),\n\t},\n];\n\nfunction ReferenceCurrencies() {\n\tconst {\n\t\tisFetching: isFetchingCoin,\n\t\terror: errorCoin,\n\t\tdata: coinData,\n\t} = useGetReferenceCurrenciesQuery({});\n\tconst {\n\t\tisFetching: isFetchingFiat,\n\t\terror: errorFiat,\n\t\tdata: fiatData,\n\t} = useGetReferenceCurrenciesQuery({ type: 'fiat' });\n\n\treturn (\n\t\t<AsyncWrapper\n\t\t\tloading={isFetchingCoin || isFetchingFiat}\n\t\t\terror={errorCoin || errorFiat}\n\t\t\tfulfilled={Boolean(coinData && fiatData)}\n\t\t>\n\t\t\t<Helmet\n\t\t\t\ttitle='Reference Currencies'\n\t\t\t\tdescription='Get a list of reference currencies, which can be used as reference for coins. The response includes all the essentials for this use-case, such as the symbol (e.g. USD) and - if available - the sign (e.g. $).'\n\t\t\t/>\n\t\t\t{Boolean(coinData && fiatData) && (\n\t\t\t\t<>\n\t\t\t\t\t<Typography.Title level={3} className='mt-8 mb-5'>\n\t\t\t\t\t\tCoin Reference Currencies\n\t\t\t\t\t</Typography.Title>\n\t\t\t\t\t<Table\n\t\t\t\t\t\tscroll={{ x: 'max-content' }}\n\t\t\t\t\t\tcolumns={columns}\n\t\t\t\t\t\tdataSource={coinData.data.currencies}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<Typography.Title level={3} className='mt-20 mb-5'>\n\t\t\t\t\t\tFiat Reference Currencies\n\t\t\t\t\t</Typography.Title>\n\t\t\t\t\t<Table\n\t\t\t\t\t\tscroll={{ x: 'max-content' }}\n\t\t\t\t\t\tcolumns={columns}\n\t\t\t\t\t\tdataSource={fiatData.data.currencies}\n\t\t\t\t\t/>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</AsyncWrapper>\n\t);\n}\n\nexport default ReferenceCurrencies;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}