{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ridha\\\\Downloads\\\\cryptoverse-main\\\\src\\\\layouts\\\\Navbar.tsx\",\n  _s = $RefreshSig$();\nimport { Alert, Layout, Select, Spin } from 'antd';\nimport { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useGetCoinsQuery } from '../redux/features/coins.feature';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Navbar() {\n  _s();\n  const navigateTo = useNavigate();\n  const {\n    isFetching,\n    error,\n    data\n  } = useGetCoinsQuery('');\n  const [options, setOptions] = useState([]);\n  useEffect(() => {\n    var _data$data;\n    setOptions(data === null || data === void 0 ? void 0 : (_data$data = data.data) === null || _data$data === void 0 ? void 0 : _data$data.coins.map(coin => ({\n      value: coin.name,\n      label: coin.name,\n      reset: {\n        ...coin\n      }\n    })));\n  }, [data]);\n  const onSelect = (_value, option) => {\n    navigateTo(`/crypto/${option.reset.uuid}`);\n  };\n  if (isFetching) {\n    return /*#__PURE__*/_jsxDEV(Spin, {\n      size: \"small\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 10\n    }, this);\n  } else if (error) {\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      showIcon: true,\n      message: JSON.stringify(error),\n      type: \"warning\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 10\n    }, this);\n  } else if (data) {\n    return /*#__PURE__*/_jsxDEV(Layout.Header, {\n      className: \"p-0 bg-white md:grid grid-cols-5 items-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mx-5 col-span-2 items-center\",\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          showSearch: true,\n          onSelect: onSelect,\n          className: \"w-full\",\n          placeholder: \"Search for Cryptocurrencies ??\",\n          filterOption: (inputValue, option) => option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1,\n          filterSort: (optionA, optionB) => {\n            var _optionA$label, _optionB$label;\n            return ((_optionA$label = optionA === null || optionA === void 0 ? void 0 : optionA.label) !== null && _optionA$label !== void 0 ? _optionA$label : '').toLowerCase().localeCompare(((_optionB$label = optionB === null || optionB === void 0 ? void 0 : optionB.label) !== null && _optionB$label !== void 0 ? _optionB$label : '').toLowerCase());\n          },\n          options: options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 4\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n}\n_s(Navbar, \"kl6Ld6ORp4pehhXbgg5IGTlU2Vg=\", false, function () {\n  return [useNavigate, useGetCoinsQuery];\n});\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["Alert","Layout","Select","Spin","useEffect","useState","useNavigate","useGetCoinsQuery","jsxDEV","_jsxDEV","Fragment","_Fragment","Navbar","_s","navigateTo","isFetching","error","data","options","setOptions","_data$data","coins","map","coin","value","name","label","reset","onSelect","_value","option","uuid","size","fileName","_jsxFileName","lineNumber","columnNumber","showIcon","message","JSON","stringify","type","Header","className","children","showSearch","placeholder","filterOption","inputValue","toUpperCase","indexOf","filterSort","optionA","optionB","_optionA$label","_optionB$label","toLowerCase","localeCompare","_c","$RefreshReg$"],"sources":["C:/Users/ridha/Downloads/cryptoverse-main/src/layouts/Navbar.tsx"],"sourcesContent":["import { Alert, Layout, Select, Spin } from 'antd';\nimport { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useGetCoinsQuery } from '../redux/features/coins.feature';\n\nfunction Navbar() {\n\tconst navigateTo = useNavigate();\n\tconst { isFetching, error, data } = useGetCoinsQuery('');\n\n\tconst [options, setOptions] = useState<AutoCompleteOption[]>([]);\n\n\tuseEffect(() => {\n\t\tsetOptions(\n\t\t\tdata?.data?.coins.map((coin: Coin) => ({\n\t\t\t\tvalue: coin.name,\n\t\t\t\tlabel: coin.name,\n\t\t\t\treset: { ...coin },\n\t\t\t}))\n\t\t);\n\t}, [data]);\n\n\tconst onSelect = (_value: string, option: AutoCompleteOption) => {\n\t\tnavigateTo(`/crypto/${option.reset.uuid}`);\n\t};\n\n\tif (isFetching) {\n\t\treturn <Spin size='small' />;\n\t} else if (error) {\n\t\treturn <Alert showIcon message={JSON.stringify(error)} type='warning' />;\n\t} else if (data) {\n\t\treturn (\n\t\t\t<Layout.Header className='p-0 bg-white md:grid grid-cols-5 items-center'>\n\t\t\t\t<div className='mx-5 col-span-2 items-center'>\n\t\t\t\t\t<Select\n\t\t\t\t\t\tshowSearch\n\t\t\t\t\t\tonSelect={onSelect}\n\t\t\t\t\t\tclassName='w-full'\n\t\t\t\t\t\tplaceholder='Search for Cryptocurrencies ??'\n\t\t\t\t\t\tfilterOption={(inputValue, option) =>\n\t\t\t\t\t\t\toption!.value.toUpperCase().indexOf(inputValue.toUpperCase()) !==\n\t\t\t\t\t\t\t-1\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfilterSort={(optionA, optionB) =>\n\t\t\t\t\t\t\t(optionA?.label ?? '')\n\t\t\t\t\t\t\t\t.toLowerCase()\n\t\t\t\t\t\t\t\t.localeCompare((optionB?.label ?? '').toLowerCase())\n\t\t\t\t\t\t}\n\t\t\t\t\t\toptions={options}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</Layout.Header>\n\t\t);\n\t} else {\n\t\treturn <></>;\n\t}\n}\n\nexport default Navbar;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}