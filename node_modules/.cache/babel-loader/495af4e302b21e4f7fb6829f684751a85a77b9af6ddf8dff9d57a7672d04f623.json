{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { createApi, fetchBaseQuery, retry } from '@reduxjs/toolkit/query/react';\nconst newsApi = createApi({\n  reducerPath: 'newsApi',\n  baseQuery: retry(fetchBaseQuery({\n    baseUrl: process.env.REACT_APP_NEWS_API_URL || '',\n    headers: {\n      'X-BingApis-SDK': 'true',\n      'X-RapidAPI-Key': process.env.REACT_APP_RAPIDAPI_KEY || '',\n      'X-RapidAPI-Host': process.env.REACT_APP_NEWS_RAPIDAPI_HOST || ''\n    }\n  }), {\n    maxRetries: 3\n  }),\n  endpoints: builder => ({\n    getFeeds: builder.query({\n      query: _ref => {\n        let {\n          query = '',\n          count = 12\n        } = _ref;\n        return `/news/search?q=${query}&safeSearch=Off&textFormat=Raw&freshness=Day&count=${count}`;\n      }\n    })\n  })\n});\nexport const counterSlice = createSlice({\n  name: 'news',\n  initialState: {},\n  reducers: {}\n});\nexport const {\n  useGetFeedsQuery\n} = newsApi;\nexport { newsApi };","map":{"version":3,"names":["createSlice","createApi","fetchBaseQuery","retry","newsApi","reducerPath","baseQuery","baseUrl","process","env","REACT_APP_NEWS_API_URL","headers","REACT_APP_RAPIDAPI_KEY","REACT_APP_NEWS_RAPIDAPI_HOST","maxRetries","endpoints","builder","getFeeds","query","_ref","count","counterSlice","name","initialState","reducers","useGetFeedsQuery"],"sources":["C:/Users/ridha/Downloads/cryptoverse-main/src/redux/features/news.feature.ts"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { createApi, fetchBaseQuery, retry } from '@reduxjs/toolkit/query/react';\n\nconst newsApi = createApi({\n\treducerPath: 'newsApi',\n\n\tbaseQuery: retry(\n\t\tfetchBaseQuery({\n\t\t\tbaseUrl: process.env.REACT_APP_NEWS_API_URL || '',\n\t\t\theaders: {\n\t\t\t\t'X-BingApis-SDK': 'true',\n\t\t\t\t'X-RapidAPI-Key': process.env.REACT_APP_RAPIDAPI_KEY || '',\n\t\t\t\t'X-RapidAPI-Host': process.env.REACT_APP_NEWS_RAPIDAPI_HOST || '',\n\t\t\t},\n\t\t}),\n\t\t{ maxRetries: 3 }\n\t),\n\n\tendpoints: (builder) => ({\n\t\tgetFeeds: builder.query({\n\t\t\tquery: ({ query = '', count = 12 }) =>\n\t\t\t\t`/news/search?q=${query}&safeSearch=Off&textFormat=Raw&freshness=Day&count=${count}`,\n\t\t}),\n\t}),\n});\n\nexport const counterSlice = createSlice({\n\tname: 'news',\n\tinitialState: {},\n\treducers: {},\n});\n\nexport const { useGetFeedsQuery } = newsApi;\nexport { newsApi };\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,SAAS,EAAEC,cAAc,EAAEC,KAAK,QAAQ,8BAA8B;AAE/E,MAAMC,OAAO,GAAGH,SAAS,CAAC;EACzBI,WAAW,EAAE,SAAS;EAEtBC,SAAS,EAAEH,KAAK,CACfD,cAAc,CAAC;IACdK,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,sBAAsB,IAAI,EAAE;IACjDC,OAAO,EAAE;MACR,gBAAgB,EAAE,MAAM;MACxB,gBAAgB,EAAEH,OAAO,CAACC,GAAG,CAACG,sBAAsB,IAAI,EAAE;MAC1D,iBAAiB,EAAEJ,OAAO,CAACC,GAAG,CAACI,4BAA4B,IAAI;IAChE;EACD,CAAC,CAAC,EACF;IAAEC,UAAU,EAAE;EAAE,CAAC,CACjB;EAEDC,SAAS,EAAGC,OAAO,KAAM;IACxBC,QAAQ,EAAED,OAAO,CAACE,KAAK,CAAC;MACvBA,KAAK,EAAEC,IAAA;QAAA,IAAC;UAAED,KAAK,GAAG,EAAE;UAAEE,KAAK,GAAG;QAAG,CAAC,GAAAD,IAAA;QAAA,OAChC,kBAAiBD,KAAM,sDAAqDE,KAAM,EAAC;MAAA;IACtF,CAAC;EACF,CAAC;AACF,CAAC,CAAC;AAEF,OAAO,MAAMC,YAAY,GAAGrB,WAAW,CAAC;EACvCsB,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE,CAAC,CAAC;EAChBC,QAAQ,EAAE,CAAC;AACZ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEC;AAAiB,CAAC,GAAGrB,OAAO;AAC3C,SAASA,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}