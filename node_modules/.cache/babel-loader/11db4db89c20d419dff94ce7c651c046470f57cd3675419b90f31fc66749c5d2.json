{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ridha\\\\Downloads\\\\cryptoverse-main\\\\src\\\\constants\\\\crypto.tsx\";\nimport { CheckOutlined, DollarCircleOutlined, ExclamationCircleOutlined, FundOutlined, MoneyCollectOutlined, NumberOutlined, StopOutlined, ThunderboltOutlined, TrophyOutlined } from '@ant-design/icons';\nimport millify from 'millify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TIME_PERIOD = ['3h', '24h', '7d', '30d', '1y', '3m', '3y', '5y'];\nconst genericStats = coin => {\n  return [{\n    title: 'Number Of Markets',\n    value: coin.numberOfMarkets,\n    icon: FundOutlined\n  }, {\n    title: 'Number Of Exchanges',\n    value: coin.numberOfExchanges,\n    icon: MoneyCollectOutlined\n  }, {\n    title: 'Aprroved Supply',\n    value: coin.supply.confirmed ? /*#__PURE__*/_jsxDEV(CheckOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 35\n    }, this) : /*#__PURE__*/_jsxDEV(StopOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 55\n    }, this),\n    icon: ExclamationCircleOutlined\n  }, {\n    title: 'Total Supply',\n    value: `$ ${millify(parseFloat(coin.supply.total))}`,\n    icon: ExclamationCircleOutlined\n  }, {\n    title: 'Circulating Supply',\n    value: `$ ${millify(parseFloat(coin.supply.max))}`,\n    icon: ExclamationCircleOutlined\n  }];\n};\nconst coinState = coin => {\n  return [{\n    title: 'Price to USD',\n    value: `$ ${coin.price && millify(parseFloat(coin.price))}`,\n    icon: DollarCircleOutlined\n  }, {\n    title: 'Rank',\n    value: coin.rank,\n    icon: NumberOutlined\n  }, {\n    title: '24h Volume',\n    value: `$ ${coin['24hVolume'] && millify(parseFloat(coin['24hVolume']))}`,\n    icon: ThunderboltOutlined\n  }, {\n    title: 'Market Cap',\n    value: `$ ${coin.marketCap && millify(parseFloat(coin.marketCap))}`,\n    icon: DollarCircleOutlined\n  }, {\n    title: 'All-time-high(daily avg.)',\n    value: `$ ${millify(parseFloat(coin.allTimeHigh.price))}`,\n    icon: TrophyOutlined\n  }];\n};\nexport { TIME_PERIOD, coinState, genericStats };","map":{"version":3,"names":["CheckOutlined","DollarCircleOutlined","ExclamationCircleOutlined","FundOutlined","MoneyCollectOutlined","NumberOutlined","StopOutlined","ThunderboltOutlined","TrophyOutlined","millify","jsxDEV","_jsxDEV","TIME_PERIOD","genericStats","coin","title","value","numberOfMarkets","icon","numberOfExchanges","supply","confirmed","fileName","_jsxFileName","lineNumber","columnNumber","parseFloat","total","max","coinState","price","rank","marketCap","allTimeHigh"],"sources":["C:/Users/ridha/Downloads/cryptoverse-main/src/constants/crypto.tsx"],"sourcesContent":["import {\n\tCheckOutlined,\n\tDollarCircleOutlined,\n\tExclamationCircleOutlined,\n\tFundOutlined,\n\tMoneyCollectOutlined,\n\tNumberOutlined,\n\tStopOutlined,\n\tThunderboltOutlined,\n\tTrophyOutlined,\n} from '@ant-design/icons';\nimport millify from 'millify';\n\nconst TIME_PERIOD = ['3h', '24h', '7d', '30d', '1y', '3m', '3y', '5y'];\n\nconst genericStats = (coin: Coin) => {\n\treturn [\n\t\t{\n\t\t\ttitle: 'Number Of Markets',\n\t\t\tvalue: coin.numberOfMarkets,\n\t\t\ticon: FundOutlined,\n\t\t},\n\t\t{\n\t\t\ttitle: 'Number Of Exchanges',\n\t\t\tvalue: coin.numberOfExchanges,\n\t\t\ticon: MoneyCollectOutlined,\n\t\t},\n\t\t{\n\t\t\ttitle: 'Aprroved Supply',\n\t\t\tvalue: coin.supply.confirmed ? <CheckOutlined /> : <StopOutlined />,\n\t\t\ticon: ExclamationCircleOutlined,\n\t\t},\n\t\t{\n\t\t\ttitle: 'Total Supply',\n\t\t\tvalue: `$ ${millify(parseFloat(coin.supply.total))}`,\n\t\t\ticon: ExclamationCircleOutlined,\n\t\t},\n\t\t{\n\t\t\ttitle: 'Circulating Supply',\n\t\t\tvalue: `$ ${millify(parseFloat(coin.supply.max))}`,\n\t\t\ticon: ExclamationCircleOutlined,\n\t\t},\n\t];\n};\n\nconst coinState = (coin: Coin) => {\n\treturn [\n\t\t{\n\t\t\ttitle: 'Price to USD',\n\t\t\tvalue: `$ ${coin.price && millify(parseFloat(coin.price))}`,\n\t\t\ticon: DollarCircleOutlined,\n\t\t},\n\t\t{ title: 'Rank', value: coin.rank, icon: NumberOutlined },\n\t\t{\n\t\t\ttitle: '24h Volume',\n\t\t\tvalue: `$ ${coin['24hVolume'] && millify(parseFloat(coin['24hVolume']))}`,\n\t\t\ticon: ThunderboltOutlined,\n\t\t},\n\t\t{\n\t\t\ttitle: 'Market Cap',\n\t\t\tvalue: `$ ${coin.marketCap && millify(parseFloat(coin.marketCap))}`,\n\t\t\ticon: DollarCircleOutlined,\n\t\t},\n\t\t{\n\t\t\ttitle: 'All-time-high(daily avg.)',\n\t\t\tvalue: `$ ${millify(parseFloat(coin.allTimeHigh.price))}`,\n\t\t\ticon: TrophyOutlined,\n\t\t},\n\t];\n};\n\nexport { TIME_PERIOD, coinState, genericStats };\n\n"],"mappings":";AAAA,SACCA,aAAa,EACbC,oBAAoB,EACpBC,yBAAyB,EACzBC,YAAY,EACZC,oBAAoB,EACpBC,cAAc,EACdC,YAAY,EACZC,mBAAmB,EACnBC,cAAc,QACR,mBAAmB;AAC1B,OAAOC,OAAO,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,WAAW,GAAG,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;AAEtE,MAAMC,YAAY,GAAIC,IAAU,IAAK;EACpC,OAAO,CACN;IACCC,KAAK,EAAE,mBAAmB;IAC1BC,KAAK,EAAEF,IAAI,CAACG,eAAe;IAC3BC,IAAI,EAAEf;EACP,CAAC,EACD;IACCY,KAAK,EAAE,qBAAqB;IAC5BC,KAAK,EAAEF,IAAI,CAACK,iBAAiB;IAC7BD,IAAI,EAAEd;EACP,CAAC,EACD;IACCW,KAAK,EAAE,iBAAiB;IACxBC,KAAK,EAAEF,IAAI,CAACM,MAAM,CAACC,SAAS,gBAAGV,OAAA,CAACX,aAAa;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,gBAAGd,OAAA,CAACL,YAAY;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;IACnEP,IAAI,EAAEhB;EACP,CAAC,EACD;IACCa,KAAK,EAAE,cAAc;IACrBC,KAAK,EAAG,KAAIP,OAAO,CAACiB,UAAU,CAACZ,IAAI,CAACM,MAAM,CAACO,KAAK,CAAC,CAAE,EAAC;IACpDT,IAAI,EAAEhB;EACP,CAAC,EACD;IACCa,KAAK,EAAE,oBAAoB;IAC3BC,KAAK,EAAG,KAAIP,OAAO,CAACiB,UAAU,CAACZ,IAAI,CAACM,MAAM,CAACQ,GAAG,CAAC,CAAE,EAAC;IAClDV,IAAI,EAAEhB;EACP,CAAC,CACD;AACF,CAAC;AAED,MAAM2B,SAAS,GAAIf,IAAU,IAAK;EACjC,OAAO,CACN;IACCC,KAAK,EAAE,cAAc;IACrBC,KAAK,EAAG,KAAIF,IAAI,CAACgB,KAAK,IAAIrB,OAAO,CAACiB,UAAU,CAACZ,IAAI,CAACgB,KAAK,CAAC,CAAE,EAAC;IAC3DZ,IAAI,EAAEjB;EACP,CAAC,EACD;IAAEc,KAAK,EAAE,MAAM;IAAEC,KAAK,EAAEF,IAAI,CAACiB,IAAI;IAAEb,IAAI,EAAEb;EAAe,CAAC,EACzD;IACCU,KAAK,EAAE,YAAY;IACnBC,KAAK,EAAG,KAAIF,IAAI,CAAC,WAAW,CAAC,IAAIL,OAAO,CAACiB,UAAU,CAACZ,IAAI,CAAC,WAAW,CAAC,CAAC,CAAE,EAAC;IACzEI,IAAI,EAAEX;EACP,CAAC,EACD;IACCQ,KAAK,EAAE,YAAY;IACnBC,KAAK,EAAG,KAAIF,IAAI,CAACkB,SAAS,IAAIvB,OAAO,CAACiB,UAAU,CAACZ,IAAI,CAACkB,SAAS,CAAC,CAAE,EAAC;IACnEd,IAAI,EAAEjB;EACP,CAAC,EACD;IACCc,KAAK,EAAE,2BAA2B;IAClCC,KAAK,EAAG,KAAIP,OAAO,CAACiB,UAAU,CAACZ,IAAI,CAACmB,WAAW,CAACH,KAAK,CAAC,CAAE,EAAC;IACzDZ,IAAI,EAAEV;EACP,CAAC,CACD;AACF,CAAC;AAED,SAASI,WAAW,EAAEiB,SAAS,EAAEhB,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}